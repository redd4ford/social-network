version: '3.8'

services:

  db:
    container_name: db
    image: postgres:14-alpine
    restart: always
    env_file:
      - socialnetwork/.env
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    ports:
      - "5432:5432"
    volumes:
      - postgres-volume:/data/db

  django_app:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    restart: always
    env_file:
      - socialnetwork/.env
    depends_on:
      - db
    links:
      - db
    ports:
      - "8000:8000"
    expose:
      - "8000"
    stdin_open: true

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.14.0
    restart: unless-stopped
    depends_on:
      - django_app
    links:
      - django_app
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/prometheus/:/etc/prometheus/

  grafana:
    container_name: grafana
    image: grafana/grafana:7.5.7
    restart: unless-stopped
    env_file:
      - socialnetwork/.env
    depends_on:
      - prometheus
    links:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./infrastructure/grafana/provisioning/:/etc/grafana/provisioning/
      - grafana-volume:/var/lib/grafana

volumes:
  postgres-volume:
  grafana-volume:
